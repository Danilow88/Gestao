def process_matt_response(user_message):
    """IA conversacional avan√ßada do Matt - Assistente inteligente completo"""
    import re
    from datetime import datetime, timedelta
    
    print(f"üîß DEBUG: process_matt_response chamada com: '{user_message}'")
    
    try:
        # Garantir que os dados est√£o inicializados
        if 'gadgets_data' not in st.session_state:
            st.session_state.gadgets_data = pd.DataFrame()
        
        message_lower = user_message.lower()
        
        # ====================================================================
        # SISTEMA DE IA CONVERSACIONAL EXPANDIDO - MATT 2.0
        # ====================================================================
        
        # 1. CONFIGURA√á√ïES DE BUDGET E PREFER√äNCIAS
        if any(palavra in message_lower for palavra in ['definir budget', 'configurar or√ßamento', 'preferir', 'priorit√°rio', 'limitar quantidade']):
            # Detectar configura√ß√£o de budget
            if any(palavra in message_lower for palavra in ['budget', 'or√ßamento']):
                match = re.search(r'r?\$?\s*(\d{1,3}(?:\.\d{3})*(?:,\d{2})?|\d+)', message_lower)
                if match:
                    valor_str = match.group(1).replace('.', '').replace(',', '.')
                    try:
                        budget = float(valor_str)
                        if budget < 1000:
                            budget *= 1000
                        st.session_state.matt_budget = budget
                        return f"üí∞ **Budget definido com sucesso!** R$ {budget:,.2f} configurado para suas an√°lises e recomenda√ß√µes."
                    except:
                        pass
            
            # Detectar prefer√™ncia de gadgets
            gadgets_keywords = ['mouse', 'teclado', 'adaptador', 'usb-c', 'usb c', 'headset']
            gadgets_encontrados = []
            
            # Mapear termos para nomes padronizados
            mapa_gadgets = {
                'mouse': 'Mouse',
                'teclado': 'Teclado', 
                'adaptador': 'Adaptador USB-C',
                'usb-c': 'Adaptador USB-C',
                'usb c': 'Adaptador USB-C',
                'headset': 'Headset'
            }
            
            for termo, nome_padrao in mapa_gadgets.items():
                if termo in message_lower:
                    if nome_padrao not in gadgets_encontrados:
                        gadgets_encontrados.append(nome_padrao)
            
            if gadgets_encontrados:
                gadgets_atuais = st.session_state.get('gadgets_preferidos', [])
                # Adicionar novos gadgets sem duplicar
                for gadget in gadgets_encontrados:
                    if gadget not in gadgets_atuais:
                        gadgets_atuais.append(gadget)
                
                st.session_state.gadgets_preferidos = gadgets_atuais
                texto_gadgets = ", ".join(gadgets_encontrados)
                return f"üéØ **Gadgets priorit√°rios definidos!** {texto_gadgets} agora receber√£o prefer√™ncia nas recomenda√ß√µes."
            
            return """üéØ **CONFIGURA√á√ïES MATT 2.0**

Para configurar suas prefer√™ncias, use comandos como:
‚Ä¢ "Definir budget de R$ 80.000"
‚Ä¢ "Priorizar mouse e headset nas compras"  
‚Ä¢ "Limitar quantidade para 15 por item"

**üìä Configura√ß√µes atuais:**
‚Ä¢ üí∞ Budget: R$ {0:,.2f}
‚Ä¢ üéØ Gadgets priorit√°rios: {1}
‚Ä¢ üì¶ Limite por item: {2} unidades
‚Ä¢ üî• % Extra priorit√°rio: {3}%

**üí° Dica:** Use as configura√ß√µes acima na interface visual ou converse comigo diretamente!
""".format(
                st.session_state.get('matt_budget', 50000),
                ", ".join(st.session_state.get('gadgets_preferidos', [])) or 'Nenhum',
                st.session_state.get('matt_limite_qty', 20),
                st.session_state.get('matt_percentual_extra', 20)
            )

        # 2. SAUDA√á√ïES E APRESENTA√á√ÉO
        elif any(palavra in message_lower for palavra in ['ol√°', 'oi', 'hey', 'bom dia', 'boa tarde', 'boa noite', 'tudo bem', 'como vai']):
            hora = datetime.now().hour
            if hora < 12:
                saudacao = "Bom dia"
            elif hora < 18:
                saudacao = "Boa tarde"
            else:
                saudacao = "Boa noite"
            
            # Status do sistema
            total_perdas = len(st.session_state.gadgets_data) if not st.session_state.gadgets_data.empty else 0
            tem_estoque = 'estoque_data' in st.session_state and not st.session_state.estoque_data.empty
            
            return f"""üëã **{saudacao}! Sou o Matt, seu assistente de IA especializado em gest√£o inteligente!**

üß† **Status da Intelig√™ncia Artificial:**
‚Ä¢ Sistema conversacional: ‚óè ATIVO
‚Ä¢ An√°lise de dados: ‚óè {total_perdas} registros dispon√≠veis
‚Ä¢ Controle de estoque: ‚óè {"CONECTADO" if tem_estoque else "AGUARDANDO CONFIGURA√á√ÉO"}
‚Ä¢ Recomenda√ß√µes IA: ‚óè OPERACIONAL

‚óé **Hoje posso conversar sobre:**
‚Ä¢ ‚ñ¨ An√°lises detalhadas e insights personalizados
‚Ä¢ $ Otimiza√ß√£o de or√ßamentos e estrat√©gias financeiras  
‚Ä¢ ‚ñ† Gest√£o inteligente de estoque e alertas preditivos
‚Ä¢ üõí Recomenda√ß√µes de compras baseadas em IA
‚Ä¢ ‚ñ≤ Tend√™ncias, padr√µes e an√°lises preditivas
‚Ä¢ ü§ñ Qualquer quest√£o sobre gest√£o de gadgets!

üí¨ **Converse comigo naturalmente!** Pergunte qualquer coisa, desde an√°lises simples at√© estrat√©gias complexas. Sou uma IA completa pronta para ajudar!

**O que gostaria de saber ou otimizar hoje?** ‚ñ≤"""
        
        # 3. AJUDA E TUTORIAL
        elif any(palavra in message_lower for palavra in ['ajuda', 'help', 'como', 'tutorial', 'funciona', 'comandos', 'o que pode']):
            return """ü§ñ **MATT 2.0 - ASSISTENTE DE IA COMPLETO**

‚óé **Capacidades da Intelig√™ncia Artificial:**

üéØ **Configura√ß√µes Inteligentes:**
‚Ä¢ "Definir budget de R$ 80.000"
‚Ä¢ "Priorizar mouse e headset nas compras"
‚Ä¢ "Limitar quantidades para 15 por item"
‚Ä¢ "Configurar teclado e adaptador priorit√°rios"

‚ñ¨ **An√°lises Avan√ßadas:**
‚Ä¢ "Analise os dados de perda dos √∫ltimos 30 dias"
‚Ä¢ "Qual item tem mais problemas?"
‚Ä¢ "Mostre um relat√≥rio executivo completo"
‚Ä¢ "Identifique padr√µes e tend√™ncias"

$ **Gest√£o Financeira Inteligente:**
‚Ä¢ "Otimize or√ßamento de R$ 50.000 priorizando mouse e teclado"
‚Ä¢ "Como distribuir melhor os recursos?"
‚Ä¢ "Calcule ROI das compras sugeridas"
‚Ä¢ "Projete gastos futuros"

‚ñ† **Controle de Estoque IA:**
‚Ä¢ "Quais itens est√£o cr√≠ticos?"
‚Ä¢ "Preveja quando vou ficar sem headsets"
‚Ä¢ "Calcule ponto de reposi√ß√£o ideal"
‚Ä¢ "Monitore alertas autom√°ticos"

üõí **Compras Estrat√©gicas:**
‚Ä¢ "Sugira compras para este trimestre"
‚Ä¢ "Priorize aquisi√ß√µes por urg√™ncia"
‚Ä¢ "Analise melhor custo-benef√≠cio"
‚Ä¢ "Quando comprar cada item?"

‚ñ≤ **An√°lises Preditivas:**
‚Ä¢ "Projete perdas dos pr√≥ximos meses"
‚Ä¢ "Identifique riscos de desabastecimento"
‚Ä¢ "Analise sazonalidade dos dados"
‚Ä¢ "Sugira melhorias de processo"

ü§ñ **Conversa√ß√£o Natural:**
‚Ä¢ Fa√ßa perguntas em linguagem natural
‚Ä¢ Solicite an√°lises personalizadas
‚Ä¢ Pe√ßa recomenda√ß√µes espec√≠ficas
‚Ä¢ Converse sobre qualquer aspecto da gest√£o

‚óÜ **Exemplos de Conversas:**
‚Ä¢ "Matt, otimize R$ 80k priorizando headset e adaptador"
‚Ä¢ "Preciso de um plano de compras para Q4"
‚Ä¢ "Configure mouse e teclado como priorit√°rios"
‚Ä¢ "Qual a melhor estrat√©gia para 2025?"

**Sou uma IA conversacional completa. Converse comigo como com um especialista!** ‚óé"""

        # 4. AN√ÅLISES E RELAT√ìRIOS INTELIGENTES
        elif any(palavra in message_lower for palavra in ['an√°lise', 'relat√≥rio', 'dados', 'insights', 'padr√£o', 'tend√™ncia', 'dashboard']):
            if not st.session_state.gadgets_data.empty:
                df = st.session_state.gadgets_data
                
                # An√°lises avan√ßadas com IA
                total_registros = len(df)
                total_itens = df['quantidade'].sum()
                valor_total = df['valor_total'].sum()
                periodo_dias = (df['data'].max() - df['data'].min()).days or 1
                
                # Top insights
                item_critico = df['name'].value_counts().index[0]
                local_critico = df['building'].value_counts().index[0]
                
                return f"""‚ñ¨ **RELAT√ìRIO EXECUTIVO IA - AN√ÅLISE MATT 2.0**

‚óØ **OVERVIEW INTELIGENTE ({periodo_dias} dias de dados):**
‚Ä¢ **{total_registros}** registros analisados
‚Ä¢ **{int(total_itens)}** itens perdidos
‚Ä¢ **R$ {valor_total:,.2f}** em perdas totais
‚Ä¢ **{len(df['building'].unique())}** localiza√ß√µes impactadas

üö® **ALERTAS CR√çTICOS DA IA:**
‚Ä¢ **Item mais problem√°tico:** {item_critico} ({df['name'].value_counts().iloc[0]} ocorr√™ncias)
‚Ä¢ **Local mais afetado:** {local_critico} ({df['building'].value_counts().iloc[0]} perdas)

**Posso detalhar qualquer aspecto ou fazer an√°lises espec√≠ficas!** ‚óé"""
            else:
                return """‚ñ¨ **IA AGUARDANDO DADOS PARA AN√ÅLISE**

ü§ñ **Sistema de An√°lise Inteligente Pronto!**

Assim que voc√™ registrar perdas, minha IA ser√° capaz de:

üîÆ **An√°lises Preditivas:**
‚Ä¢ Identificar padr√µes ocultos nos dados
‚Ä¢ Prever tend√™ncias futuras de perdas
‚Ä¢ Calcular riscos de desabastecimento
‚Ä¢ Otimizar estrat√©gias preventivas

**Estou ansioso para analisar seus dados e gerar insights valiosos!** ‚ñ≤"""

        # 5. RESPOSTA PADR√ÉO
        else:
            return """ü§ñ **MATT 2.0 - IA CONVERSACIONAL**

**N√£o entendi exatamente sua solicita√ß√£o, mas posso ajudar com:**

üéØ **Configura√ß√µes:** "Definir budget de R$ 50.000"
‚ñ¨ **An√°lises:** "Analise meus dados de perdas"  
$ **Or√ßamento:** "Otimize R$ 40.000"
‚ñ† **Estoque:** "Status do estoque atual"
üõí **Compras:** "Sugira compras para este m√™s"

**Reformule sua pergunta para uma resposta mais espec√≠fica!** ‚óé"""
    
    except Exception as e:
        print(f"üîß DEBUG: Erro geral na inicializa√ß√£o: {str(e)}")
        return f"""‚ùå **ERRO NO SISTEMA MATT 2.0**

üîß **Detalhes do erro:**
{str(e)}

‚ö†Ô∏è **Para resolver:**
1. Recarregue a p√°gina
2. Verifique se os dados est√£o carregados
3. Tente uma pergunta mais simples
4. Se persistir, contate o suporte

**Enquanto isso, posso tentar responder com funcionalidades b√°sicas.**"""
